/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import DAO.HocVienDAO;
import DAO.NguoiHocDAO;
import ENTITY.HocVien;
import ENTITY.NguoiHoc;
import UTILS.MsgBox;
import UTILS.XJdbc;
import UTILS.XLHinh;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author nguye
 */
public class QLHocVien extends javax.swing.JFrame {
    

    private HocVienDAO hocVienDAO = new HocVienDAO();
    private int maKH;

    public QLHocVien(int maKH) {
        initComponents();
        this.maKH = maKH;
        loadHocVien();
        loadNguoiHoc();
        System.out.print(maKH);
        init();
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); 
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                int confirmed = JOptionPane.showOptionDialog(null,
                        "Bạn có muốn thoát chương trinh?",
                        "Xác nhận thoát",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        new String[]{"Yes", "Cancel"},
                        "Cancel");

                if (confirmed == JOptionPane.YES_OPTION) {
                    dispose();
                }
            }
        });
    }

    void init() {
        setIconImage(XLHinh.getAppIcon());
        setLocationRelativeTo(null);
    }

    private void loadHocVien() {
        DefaultTableModel model = (DefaultTableModel) tblHocVien.getModel();
        model.setRowCount(0);

        String sql = "SELECT HocVien.*, NguoiHoc.HoTen FROM HocVien " +
                     "JOIN NguoiHoc ON HocVien.MaNH = NguoiHoc.MaNH " +
                     "WHERE HocVien.MaKH = ?;";
        try {
            ResultSet rs = XJdbc.query(sql, maKH);
            while (rs.next()) {
                Object[] row = {
                    rs.getInt("MaHV"),
                    rs.getInt("MaKH"),
                    rs.getString("MaNH"),
                    rs.getString("HoTen"),
                    rs.getDouble("Diem"),
                    false  // Initial value for the delete checkbox
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            MsgBox.alert(this, "Lỗi truy vấn học viên!");
        }
    }

    private void loadNguoiHoc() {
        DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) cboNguoiHoc.getModel();
        model.removeAllElements();
        List<NguoiHoc> list = new NguoiHocDAO().select();
        for (NguoiHoc nh : list) {
            model.addElement(nh.getMaNH() + " - " + nh.getHoTen());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        cboNguoiHoc = new javax.swing.JComboBox<>();
        txtDiem = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHocVien = new javax.swing.JTable();
        rdoTatCa = new javax.swing.JRadioButton();
        rdoDaNhap = new javax.swing.JRadioButton();
        rdoChuaNhap = new javax.swing.JRadioButton();
        btnCapNhat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HỌC VIÊN");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HỌC VIÊN KHÁC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(cboNguoiHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboNguoiHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HỌC VIÊN CỦA KHÓA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        tblHocVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MÃ HV", "MÃ KH", "MÃ NH", "HỌ VÀ TÊN", "ĐIỂM", "XÓA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHocVien);

        buttonGroup1.add(rdoTatCa);
        rdoTatCa.setSelected(true);
        rdoTatCa.setText("Tất cả");
        rdoTatCa.setBorderPainted(true);
        rdoTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTatCaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoDaNhap);
        rdoDaNhap.setText("Đã nhập điểm");
        rdoDaNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDaNhapActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoChuaNhap);
        rdoChuaNhap.setText("Chưa nhập điểm");
        rdoChuaNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoChuaNhapActionPerformed(evt);
            }
        });

        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rdoTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoDaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoChuaNhap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCapNhat)
                        .addGap(40, 40, 40))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoTatCa)
                            .addComponent(rdoDaNhap)
                            .addComponent(rdoChuaNhap))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCapNhat)
                        .addGap(20, 20, 20))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
            // Lấy thông tin học viên từ giao diện
            HocVien hv = new HocVien();
            hv.setMaKH(maKH);
            String[] nh = ((String) cboNguoiHoc.getSelectedItem()).split(" - ");
            hv.setMaNH(nh[0]);

            // Kiểm tra xem học viên đã tồn tại trong khóa học chưa
            if (hocVienDAO.isEnrolled(hv.getMaKH(), hv.getMaNH())) {
                MsgBox.alert(this, "Học viên này đã tồn tại trong khóa học!");
                return; // Không thêm học viên nếu đã tồn tại
            }

            // Kiểm tra xem trường điểm đã được nhập hay chưa
            if (!txtDiem.getText().isEmpty()) {
                hv.setDiem(Double.parseDouble(txtDiem.getText()));
            } else {
                double i=-1;
                // Nếu không nhập điểm, gán giá trị null cho trường điểm
                hv.setDiem(i); // hoặc hv.setDiem(-1.0) tùy thuộc vào quy ước của bạn
            }

            // Thêm học viên vào cơ sở dữ liệu
            hocVienDAO.insert(hv);
            loadHocVien();
            MsgBox.alert(this, "Thêm học viên thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm học viên thất bại!");
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed

        try {
            // Duyệt qua từng hàng của bảng
            for (int i = 0; i < tblHocVien.getRowCount(); i++) {
                // Lấy giá trị từ từng cột trong hàng hiện tại
                Object maHVObj = tblHocVien.getValueAt(i, 0);
                Object diemObj = tblHocVien.getValueAt(i, 4);
                Object isDeleteObj = tblHocVien.getValueAt(i, 5);

                // Kiểm tra và ép kiểu giá trị
                Integer maHV = (maHVObj instanceof Integer) ? (Integer) maHVObj : null;
                Double diem = (diemObj instanceof Double) ? (Double) diemObj : null;
                Boolean isDelete = (isDeleteObj instanceof Boolean) ? (Boolean) isDeleteObj : null;

                // Ghi nhật ký để kiểm tra
                System.out.println("Đang xử lý MaHV: " + maHV + ", Diem: " + diem + ", isDelete: " + isDelete);

                // Xử lý xóa nếu checkbox được chọn
                if (isDelete != null && isDelete) {
                    if (maHV != null) {
                        hocVienDAO.delete(maHV);
                    } else {
                        System.err.println("MaHV không hợp lệ để xóa: " + maHV);
                    }
                } 
                // Xử lý cập nhật nếu điểm không null và hợp lệ
                else if (diem != null && diem >= 0) { 
                    if (maHV != null) {
                        updateHocVien(maHV, diem);
                    } else {
                        System.err.println("MaHV không hợp lệ để cập nhật điểm: " + maHV);
                    }
                } 
                // Thông báo lỗi nếu điểm không hợp lệ
                else {
                    System.err.println("Điểm không hợp lệ cho MaHV: " + maHV);
                }
            }
            // Tải lại dữ liệu học viên sau khi cập nhật
            loadHocVien();
            // Hiển thị thông báo thành công
            MsgBox.alert(this, "Cập nhật học viên thành công!");
        } catch (Exception e) {
            // Hiển thị thông báo lỗi nếu có ngoại lệ
            MsgBox.alert(this, "Cập nhật học viên thất bại! Lỗi: " + e.getMessage());
            e.printStackTrace(); // In stack trace để kiểm tra lỗi
        }     
        
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void updateHocVien(Integer maHV, Double diem) {
        HocVien hv = hocVienDAO.findById(maHV);
        if (hv != null) {
            hv.setDiem(diem);
            hocVienDAO.update(hv); // Cập nhật thông tin học viên vào cơ sở dữ liệu
        } else {
            System.err.println("Không tìm thấy HocVien với MaHV " + maHV);
        }
    }
    private void rdoDaNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDaNhapActionPerformed
        // TODO add your handling code here:
        // Load chỉ học viên đã nhập điểm
        String sql = "SELECT HocVien.*, NguoiHoc.HoTen FROM HocVien " +
                     "JOIN NguoiHoc ON HocVien.MaNH = NguoiHoc.MaNH " +
                     "WHERE HocVien.MaKH = ? AND (HocVien.Diem IS NOT NULL and HocVien.Diem >=0 );";
        try {
            ResultSet rs = XJdbc.query(sql, maKH);
            loadHocVien(rs);
        } catch (SQLException e) {
            MsgBox.alert(this, "Lỗi truy vấn học viên!");
        }
    }//GEN-LAST:event_rdoDaNhapActionPerformed

    private void rdoChuaNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoChuaNhapActionPerformed
        // TODO add your handling code here:
        // Load chỉ học viên chưa nhập điểm
        String sql = "SELECT HocVien.*, NguoiHoc.HoTen FROM HocVien " +
                     "JOIN NguoiHoc ON HocVien.MaNH = NguoiHoc.MaNH " +
                     "WHERE HocVien.MaKH = ? AND (HocVien.Diem IS NULL OR HocVien.Diem = -1);"; // Điểm là null hoặc -1
        try {
            ResultSet rs = XJdbc.query(sql, maKH);
            loadHocVien(rs);
        } catch (SQLException e) {
            MsgBox.alert(this, "Lỗi truy vấn học viên!");
        }
    }//GEN-LAST:event_rdoChuaNhapActionPerformed

    private void rdoTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTatCaActionPerformed
        // TODO add your handling code here:
        loadHocVien();
    }//GEN-LAST:event_rdoTatCaActionPerformed
    private void loadHocVien(ResultSet rs) throws SQLException {
        DefaultTableModel model = (DefaultTableModel) tblHocVien.getModel();
        model.setRowCount(0);

        while (rs.next()) {
            Object[] row = {
                rs.getInt("MaHV"),
                rs.getInt("MaKH"),
                rs.getString("MaNH"),
                rs.getString("HoTen"),
                rs.getDouble("Diem"),
                false  // Initial value for the delete checkbox
            };
            model.addRow(row);
        }
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLHocVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLHocVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLHocVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLHocVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLHocVien(id).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cboNguoiHoc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoChuaNhap;
    private javax.swing.JRadioButton rdoDaNhap;
    private javax.swing.JRadioButton rdoTatCa;
    private javax.swing.JTable tblHocVien;
    private javax.swing.JTextField txtDiem;
    // End of variables declaration//GEN-END:variables
}
